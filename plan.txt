1. zaczynam od jednoelementowego. Ma swoje wspólrzedne - współrzedne 
całego snakea to współrzedne pierwszego segmentu. 
Analogicznie z kierunkiem, zaczynam od Direction.RIGHT

2. Po zmianie kierunku zmieniamy kierunek PIERWSZEGO segmentu (i węża).
??? Tworzę kopie węża, edytuje pierwszy element dodając mu cordy i dla body[x] podstawiam body[x-1]
Dla body[1] -> body[0]
body[2] -> body[1]
.
.
body[-1] -> body[-2]

3. W każdej petli while wywołanie draw dla każdego segmentu

4. skąd wiem jaki kierunek ma mieć nowy element węża?
eat() wywoła funkcję move() ale zamiast usuwać ostatni element, zostawi go !

### move() może zwracać ostatni element który normalnie by przepadał i korzystać z niego będe tylko w eat
lepiej: jeśli snake zje jabłko, zmień wartość isEten na True, 
w move() w warunku if isEaten: wywołać eat(body[-1]) i zmienić isEaten na False

==========

out of repo:
added 'self.maxfps = 25' to class Settings
time.sleep(zeit) => clock = pygame.time.Clock() # na poczatku def run()
clock.tick(sets.maxfps)   # na koncu while True

added break to def check_events() for loop - line 16. Fixed 180d directory change bug
